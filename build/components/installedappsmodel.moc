/****************************************************************************
** Meta object code from reading C++ file 'installedappsmodel.h'
**
** Created: Sun Oct 27 15:10:44 2013
**      by: The Qt Meta Object Compiler version 63 (Qt 4.8.4)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../components/sources/installedapps/installedappsmodel.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'installedappsmodel.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.4. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_Homerun__InstalledAppsModel[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       7,   14, // methods
       3,   49, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      29,   28,   28,   28, 0x05,
      58,   44,   28,   28, 0x05,

 // slots: signature, parameters, type, tag, flags
     106,   99,   28,   28, 0x0a,
     120,   28,   28,   28, 0x2a,

 // methods: signature, parameters, type, tag, flags
     163,  135,  130,   28, 0x02,
     206,  193,  130,   28, 0x22,
     231,  227,  130,   28, 0x22,

 // properties: name, type, flags
     248,  244, 0x02495001,
     263,  254, 0x88095401,
     281,  273, 0x0a095401,

 // properties: notify_signal_id
       0,
       0,
       0,

       0        // eod
};

static const char qt_meta_stringdata_Homerun__InstalledAppsModel[] = {
    "Homerun::InstalledAppsModel\0\0"
    "countChanged()\0sourceId,args\0"
    "openSourceRequested(QString,QVariantMap)\0"
    "reload\0refresh(bool)\0refresh()\0bool\0"
    "row,actionId,actionArgument\0"
    "trigger(int,QString,QVariant)\0"
    "row,actionId\0trigger(int,QString)\0row\0"
    "trigger(int)\0int\0count\0QObject*\0"
    "pathModel\0QString\0name\0"
};

void Homerun::InstalledAppsModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        InstalledAppsModel *_t = static_cast<InstalledAppsModel *>(_o);
        switch (_id) {
        case 0: _t->countChanged(); break;
        case 1: _t->openSourceRequested((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QVariantMap(*)>(_a[2]))); break;
        case 2: _t->refresh((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 3: _t->refresh(); break;
        case 4: { bool _r = _t->trigger((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QVariant(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 5: { bool _r = _t->trigger((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 6: { bool _r = _t->trigger((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObjectExtraData Homerun::InstalledAppsModel::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject Homerun::InstalledAppsModel::staticMetaObject = {
    { &QAbstractListModel::staticMetaObject, qt_meta_stringdata_Homerun__InstalledAppsModel,
      qt_meta_data_Homerun__InstalledAppsModel, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &Homerun::InstalledAppsModel::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *Homerun::InstalledAppsModel::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *Homerun::InstalledAppsModel::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_Homerun__InstalledAppsModel))
        return static_cast<void*>(const_cast< InstalledAppsModel*>(this));
    return QAbstractListModel::qt_metacast(_clname);
}

int Homerun::InstalledAppsModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QAbstractListModel::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 7)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 7;
    }
#ifndef QT_NO_PROPERTIES
      else if (_c == QMetaObject::ReadProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = count(); break;
        case 1: *reinterpret_cast< QObject**>(_v) = pathModel(); break;
        case 2: *reinterpret_cast< QString*>(_v) = name(); break;
        }
        _id -= 3;
    } else if (_c == QMetaObject::WriteProperty) {
        _id -= 3;
    } else if (_c == QMetaObject::ResetProperty) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 3;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 3;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void Homerun::InstalledAppsModel::countChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void Homerun::InstalledAppsModel::openSourceRequested(const QString & _t1, const QVariantMap & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_END_MOC_NAMESPACE
